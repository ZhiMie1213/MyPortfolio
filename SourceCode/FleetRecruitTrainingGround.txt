import pygame
import random
import math

pygame.init()

screenX = 1024
screenY = 768
playerX = 460
playerY = 650
playerStep = 0

idx = 0
tmr = 0
score = 0
number_of_enemies = 10

RED = (255, 0, 0)
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)

screen = pygame.display.set_mode((screenX, screenY))
pygame.display.set_caption("FPS")

#背景の描画
imgBg = pygame.image.load('background/bg.jpg')
#プレイヤー戦闘機の描画
imgPlayer = pygame.image.load('player/player_fighter.png')

class Bullet():
    def __init__(self):
        self.img = pygame.image.load('icon/player_atk.png')
        self.x = playerX + 20
        self.y = playerY - 20
        self.step = 3
    
    def hit(self):
        global score
        for e in enemies:
            if (distance(self.x, self.y, e.x, e.y) < 30):
                try:
                    bullets.remove(self)
                except ValueError:
                    break
                e.reset()
                score += 1
                print(score)
bullets = []

class Enemy():
    def __init__(self):
        #敵戦闘機の描画
        self.img = pygame.image.load('enemy/enemy_fighter.png')
        self.x = random.randint(-10, 850)
        self.y = random.randint(-10, 220)
        self.step = 1.05

    def reset(self):
        self.x = random.randint(-10, 850)
        self.y = random.randint(-10, 220)
enemies = []

def show_enemy():
    global idx, tmr
    for e in enemies:
        screen.blit(e.img,(e.x, e.y))
        e.x += e.step

        if (e.x > 903 or e.x < -10):
            e.step *= -1
            e.y += 100
            if e.y > 520:
                idx = 2
                tmr = 0
                enemies.clear()

def show_attack():
    for b in bullets:
        screen.blit(b.img, (b.x, b.y))
        b.hit()
        b.y -= b.step
        if b.y < 0:
            bullets.remove(b)

font = pygame.font.Font("freesansbold.ttf", 32)
def show_score():
    text = f"Score: {score}"
    score_render = font.render(text, True, WHITE)
    screen.blit(score_render, (870, 10))

def move_player():
    global playerX, playerY
    #両方壁の当たり判定
    if playerX < -24:
        playerX = -24
    if playerX > 908:
        playerX = 908

def distance(bx, by, ex, ey):
    a = bx - ex
    b = by - ey
    return math.sqrt(a * a + b * b)

def draw_text(scrn, txt, x, y, siz, col):
    fnt = pygame.font.Font(None, siz)
    sur = fnt.render(txt, True, col)
    x = x - sur.get_width() / 2
    y = y - sur.get_height() / 2
    scrn.blit(sur, [x, y])

def draw_main():
    global playerX, playerY, playerStep
    screen.blit(imgBg, (0, 0))
    #プレイヤーの描画位置
    screen.blit(imgPlayer, (playerX, playerY))
    playerX += playerStep
    pygame.draw.line(screen, RED, [0, 600], [1024, 600], 5)
    
def main():
    global idx, tmr, playerStep, playerX, playerY, score
    
    running = True
    while running:
        tmr = tmr + 1
        for event in pygame.event.get(): 
            if event.type == pygame.QUIT:
                running = False

            #プレイヤーのコントローラー
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT:
                    playerStep = -1.5
                elif event.key == pygame.K_RIGHT:
                    playerStep = 1.5
                elif event.key == pygame.K_SPACE:
                    bullets.append(Bullet())
                        
            if event.type == pygame.KEYUP:
                playerStep = 0

        key = pygame.key.get_pressed()
        if idx == 0:
            screen.blit(imgBg, (0, 0))
            draw_text(screen, "Fleet recruit training ground", 510, 230, 90, WHITE)
            draw_text(screen, "Please press S to start", 510, 600, 80, WHITE)

            if key[pygame.K_s]:
                idx = 1
                for i in range(number_of_enemies):
                    enemies.append(Enemy())
            
        if idx == 1:
            draw_main()
            show_enemy()
            show_attack()
            show_score()
            move_player()

        if idx == 2:
            draw_text(screen, "Game Over", 500, 300, 160, RED)
            if tmr == 30 * 60:
                idx = 0
                tmr = 0
                score = 0

        pygame.display.update()

if __name__ == '__main__':
    main()